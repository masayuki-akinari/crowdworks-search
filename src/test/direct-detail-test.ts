import { chromium } from 'playwright';
import dotenv from 'dotenv';

// Áí∞Â¢ÉÂ§âÊï∞Ë™≠„ÅøËæº„Åø
dotenv.config();

async function testDirectJobDetail() {
    console.log('üöÄ CrowdWorksÊ°à‰ª∂Ë©≥Á¥∞Áõ¥Êé•ÂèñÂæó„ÉÜ„Çπ„ÉàÈñãÂßã...');

    const browser = await chromium.launch({
        headless: false,
        devtools: false,
        args: ['--start-maximized']
    });

    try {
        const context = await browser.newContext({
            userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
            viewport: { width: 1920, height: 1080 },
        });

        const page = await context.newPage();

        // ÂÆüÈöõ„ÅÆÊ°à‰ª∂Ë©≥Á¥∞„Éö„Éº„Ç∏„Å´Áõ¥Êé•„Ç¢„ÇØ„Çª„Çπ
        // Ê≥®ÊÑèÔºöÂÆüÈöõ„ÅÆÊ°à‰ª∂ID„Çí‰ΩøÁî®ÔºàpublicÊ°à‰ª∂„ÅÆ„Åü„ÇÅÂïèÈ°å„Å™„ÅóÔºâ
        const jobUrl = 'https://crowdworks.jp/public/jobs/12131254'; // MCP„ÉÜ„Çπ„Éà„Åß‰ΩøÁî®„Åó„ÅüÊ°à‰ª∂ID

        console.log(`üìÑ Ê°à‰ª∂Ë©≥Á¥∞„Éö„Éº„Ç∏„Ç¢„ÇØ„Çª„Çπ: ${jobUrl}`);
        await page.goto(jobUrl, {
            waitUntil: 'domcontentloaded',
            timeout: 60000
        });

        await page.waitForTimeout(3000);

        // „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´Á¢∫Ë™ç
        const title = await page.title();
        console.log(`üìã „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´: "${title}"`);

        // MCP„ÅßÁ¢∫Ë™ç„Åó„ÅüÊßãÈÄ†„Å´Âü∫„Å•„ÅÑ„Å¶Ë©≥Á¥∞ÊÉÖÂ†±„ÇíÊäΩÂá∫
        const jobDetail = await page.evaluate(() => {
            // „Çø„Ç§„Éà„É´ÂèñÂæó
            const titleElement = (globalThis as any).document.querySelector('h1');
            const fullTitle = titleElement?.textContent?.trim() || '';
            const cleanTitle = fullTitle.replace(/\s+(„Ç¶„Çß„Éñ„Éá„Ç∂„Ç§„É≥|„Ç¢„É≥„Ç±„Éº„Éà|„Åù„ÅÆ‰ªñ).*„ÅÆ‰ªï‰∫ã„ÅÆ‰æùÈ†º.*$/, '').trim();

            // „ÉÜ„Éº„Éñ„É´ÊÉÖÂ†±„ÇíÊäΩÂá∫
            const tables = (globalThis as any).document.querySelectorAll('table');
            let paymentInfo = '';
            let budget = '';
            let postDate = '';
            let deadline = '';
            let applicantCount = 0;
            let contractCount = 0;
            let recruitmentCount = 0;
            let favoriteCount = 0;

            tables.forEach((table: any) => {
                const rows = table.querySelectorAll('tr');
                rows.forEach((row: any) => {
                    const cells = row.querySelectorAll('td');
                    if (cells.length >= 2) {
                        const label = cells[0]?.textContent?.trim() || '';
                        const value = cells[1]?.textContent?.trim() || '';

                        if (label.includes('Âõ∫ÂÆöÂ†±ÈÖ¨Âà∂') || label.includes('ÊôÇÈñìÂçò‰æ°Âà∂')) {
                            paymentInfo = label;
                            budget = value;
                        } else if (label.includes('Êé≤ËºâÊó•')) {
                            postDate = value;
                        } else if (label.includes('ÂøúÂãüÊúüÈôê')) {
                            deadline = value;
                        } else if (label.includes('ÂøúÂãü„Åó„Åü‰∫∫')) {
                            applicantCount = parseInt(value.replace(/[^\d]/g, '')) || 0;
                        } else if (label.includes('Â•ëÁ¥Ñ„Åó„Åü‰∫∫')) {
                            contractCount = parseInt(value.replace(/[^\d]/g, '')) || 0;
                        } else if (label.includes('ÂãüÈõÜ‰∫∫Êï∞')) {
                            recruitmentCount = parseInt(value.replace(/[^\d]/g, '')) || 0;
                        } else if (label.includes('Ê∞ó„Å´„Å™„Çã')) {
                            favoriteCount = parseInt(value.replace(/[^\d]/g, '')) || 0;
                        }
                    }
                });
            });

            // „ÇØ„É©„Ç§„Ç¢„É≥„ÉàÊÉÖÂ†±
            const clientElement = (globalThis as any).document.querySelector('a[href*="/public/employers/"]');
            const clientName = clientElement?.textContent?.trim() || 'ÂåøÂêç';

            // Ë©ï‰æ°ÊÉÖÂ†±
            let rating = '';
            const ratingElements = (globalThis as any).document.querySelectorAll('dd, definition');
            ratingElements.forEach((el: any) => {
                const text = el?.textContent?.trim() || '';
                if (text.includes('.') && text.length < 5 && !rating) {
                    rating = text;
                }
            });

            // Ë©≥Á¥∞Ë™¨ÊòéÔºàÊúÄÈï∑„ÅÆ„ÉÜ„Éº„Éñ„É´„Çª„É´Ôºâ
            let description = '';
            let maxLength = 0;
            const descCells = (globalThis as any).document.querySelectorAll('td');
            descCells.forEach((cell: any) => {
                const text = cell?.textContent?.trim() || '';
                if (text.length > maxLength && text.length > 100) {
                    description = text;
                    maxLength = text.length;
                }
            });

            return {
                title: cleanTitle,
                paymentInfo,
                budget,
                postDate,
                deadline,
                applicantCount,
                contractCount,
                recruitmentCount,
                favoriteCount,
                clientName,
                rating,
                description: description.length > 500 ? description.substring(0, 500) + '...' : description
            };
        });

        // ÁµêÊûúË°®Á§∫
        console.log('\nüìä === ÊäΩÂá∫„Åï„Çå„ÅüÊ°à‰ª∂Ë©≥Á¥∞ÊÉÖÂ†± ===');
        console.log(`üè∑Ô∏è „Çø„Ç§„Éà„É´: ${jobDetail.title}`);
        console.log(`üí∞ ÊîØÊâï„ÅÑÂΩ¢Âºè: ${jobDetail.paymentInfo}`);
        console.log(`üíµ ‰∫àÁÆó: ${jobDetail.budget}`);
        console.log(`üìÖ Êé≤ËºâÊó•: ${jobDetail.postDate}`);
        console.log(`‚è∞ ÂøúÂãüÊúüÈôê: ${jobDetail.deadline}`);
        console.log(`\nüë• ÂøúÂãüÁä∂Ê≥Å:`);
        console.log(`   - ÂøúÂãüËÄÖ: ${jobDetail.applicantCount}‰∫∫`);
        console.log(`   - Â•ëÁ¥ÑÊ∏à„Åø: ${jobDetail.contractCount}‰∫∫`);
        console.log(`   - ÂãüÈõÜ‰∫∫Êï∞: ${jobDetail.recruitmentCount}‰∫∫`);
        console.log(`   - Ê∞ó„Å´„Å™„Çã: ${jobDetail.favoriteCount}‰∫∫`);
        console.log(`\nüè¢ „ÇØ„É©„Ç§„Ç¢„É≥„ÉàÊÉÖÂ†±:`);
        console.log(`   - ÂêçÂâç: ${jobDetail.clientName}`);
        console.log(`   - Ë©ï‰æ°: ${jobDetail.rating}`);
        console.log(`\nüìù ‰ªï‰∫ãÂÜÖÂÆπ:`);
        console.log(`${jobDetail.description}`);

        console.log('\n‚è±Ô∏è 10ÁßíÂæÖÊ©ü„Åó„Å¶„Åã„Çâ„Éñ„É©„Ç¶„Ç∂„ÇíÈñâ„Åò„Åæ„Åô...');
        await page.waitForTimeout(10000);

        await context.close();

    } finally {
        await browser.close();
        console.log('üîí „Éñ„É©„Ç¶„Ç∂„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„ÉóÂÆå‰∫Ü');
    }

    console.log('‚úÖ Ê°à‰ª∂Ë©≥Á¥∞Áõ¥Êé•ÂèñÂæó„ÉÜ„Çπ„ÉàÂÆå‰∫ÜÔºÅ');
}

// „ÉÜ„Çπ„ÉàÂÆüË°å
if (require.main === module) {
    testDirectJobDetail().catch((error) => {
        console.error('‚ùå „ÉÜ„Çπ„Éà„Ç®„É©„Éº:', error);
        process.exit(1);
    });
} 